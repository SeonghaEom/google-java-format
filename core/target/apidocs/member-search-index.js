memberSearchIndex = [{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"actualSize(int, int)","url":"actualSize(int,int)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"actualStartColumn(int)"},{"p":"com.google.googlejavaformat","c":"CloseOp","l":"add(DocBuilder)","url":"add(com.google.googlejavaformat.DocBuilder)"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"add(DocBuilder)","url":"add(com.google.googlejavaformat.DocBuilder)"},{"p":"com.google.googlejavaformat","c":"Doc.Token","l":"add(DocBuilder)","url":"add(com.google.googlejavaformat.DocBuilder)"},{"p":"com.google.googlejavaformat","c":"Op","l":"add(DocBuilder)","url":"add(com.google.googlejavaformat.DocBuilder)"},{"p":"com.google.googlejavaformat","c":"OpenOp","l":"add(DocBuilder)","url":"add(com.google.googlejavaformat.DocBuilder)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"addAll(List<Op>)","url":"addAll(java.util.List)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"addBodyDeclarations(List<? extends Tree>, JavaInputAstVisitor.BracesOrNot, JavaInputAstVisitor.FirstDeclarationsOrNot)","url":"addBodyDeclarations(java.util.List,com.google.googlejavaformat.java.JavaInputAstVisitor.BracesOrNot,com.google.googlejavaformat.java.JavaInputAstVisitor.FirstDeclarationsOrNot)"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions.Style","l":"AOSP"},{"p":"com.google.googlejavaformat","c":"Output","l":"append(String, Range<Integer>)","url":"append(java.lang.String,com.google.common.collect.Range)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"append(String, Range<Integer>)","url":"append(java.lang.String,com.google.common.collect.Range)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"applyReplacements(String, List<Replacement>)","url":"applyReplacements(java.lang.String,java.util.List)"},{"p":"com.google.googlejavaformat","c":"Output","l":"blankLine(int, OpsBuilder.BlankLineWanted)","url":"blankLine(int,com.google.googlejavaformat.OpsBuilder.BlankLineWanted)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"blankLine(int, OpsBuilder.BlankLineWanted)","url":"blankLine(int,com.google.googlejavaformat.OpsBuilder.BlankLineWanted)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"BlankLineWanted()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"blankLineWanted(OpsBuilder.BlankLineWanted)","url":"blankLineWanted(com.google.googlejavaformat.OpsBuilder.BlankLineWanted)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakOp()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakOp(Doc.FillMode, String, Indent, Optional<Output.BreakTag>)","url":"breakOp(com.google.googlejavaformat.Doc.FillMode,java.lang.String,com.google.googlejavaformat.Indent,java.util.Optional)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakOp(Doc.FillMode, String, Indent)","url":"breakOp(com.google.googlejavaformat.Doc.FillMode,java.lang.String,com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakOp(Indent)","url":"breakOp(com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakOp(String)","url":"breakOp(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Output.BreakTag","l":"BreakTag()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakToFill()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"breakToFill(String)","url":"breakToFill(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"DocBuilder","l":"build()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"build()"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions.Builder","l":"build()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"builder"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions","l":"builder()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"characterRangesToTokenRanges(Collection<Range<Integer>>)","url":"characterRangesToTokenRanges(java.util.Collection)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"checkClosed(int)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter.SnippetKind","l":"CLASS_BODY_DECLARATIONS"},{"p":"com.google.googlejavaformat","c":"CloseOp","l":"CLOSE"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"close()"},{"p":"com.google.googlejavaformat","c":"FormatterDiagnostic","l":"column()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"COMPACT_RECORD_CONSTRUCTOR"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter.SnippetKind","l":"COMPILATION_UNIT"},{"p":"com.google.googlejavaformat","c":"Doc","l":"computeBreaks(CommentsHelper, int, Doc.State)","url":"computeBreaks(com.google.googlejavaformat.CommentsHelper,int,com.google.googlejavaformat.Doc.State)"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"computeBreaks(CommentsHelper, int, Doc.State)","url":"computeBreaks(com.google.googlejavaformat.CommentsHelper,int,com.google.googlejavaformat.Doc.State)"},{"p":"com.google.googlejavaformat","c":"Doc.Token","l":"computeBreaks(CommentsHelper, int, Doc.State)","url":"computeBreaks(com.google.googlejavaformat.CommentsHelper,int,com.google.googlejavaformat.Doc.State)"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"computeBreaks(Doc.State, int, boolean)","url":"computeBreaks(com.google.googlejavaformat.Doc.State,int,boolean)"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"computeRanges(List<? extends Input.Tok>)","url":"computeRanges(java.util.List)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"conditional(Output.BreakTag)","url":"conditional(com.google.googlejavaformat.Output.BreakTag)"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"containsBreaks(String)","url":"containsBreaks(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"count(String)","url":"count(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"FormatterDiagnostic","l":"create(int, int, String)","url":"create(int,int,java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"Replacement","l":"create(int, int, String)","url":"create(int,int,java.lang.String)"},{"p":"com.google.googlejavaformat","c":"FormatterDiagnostic","l":"create(String)","url":"create(java.lang.String)"},{"p":"com.google.googlejavaformat.java.filer","c":"FormattingFiler","l":"createClassFile(CharSequence, Element...)","url":"createClassFile(java.lang.CharSequence,javax.lang.model.element.Element...)"},{"p":"com.google.googlejavaformat","c":"Input","l":"createDiagnostic(int, String)","url":"createDiagnostic(int,java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter","l":"createIndentationString(int)"},{"p":"com.google.googlejavaformat.java.filer","c":"FormattingFiler","l":"createResource(JavaFileManager.Location, CharSequence, CharSequence, Element...)","url":"createResource(javax.tools.JavaFileManager.Location,java.lang.CharSequence,java.lang.CharSequence,javax.lang.model.element.Element...)"},{"p":"com.google.googlejavaformat.java.filer","c":"FormattingFiler","l":"createSourceFile(CharSequence, Element...)","url":"createSourceFile(java.lang.CharSequence,javax.lang.model.element.Element...)"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions","l":"defaultOptions()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"depth()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"diagnostic(String)","url":"diagnostic(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"FormattingError","l":"diagnostics()"},{"p":"com.google.googlejavaformat.java","c":"FormatterException","l":"diagnostics()"},{"p":"com.google.googlejavaformat","c":"Doc","l":"Doc()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"DocBuilder","l":"DocBuilder()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"drain()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"dropEmptyDeclarations()"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"EMPTY_RANGE"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"endTok(Input.Token)","url":"endTok(com.google.googlejavaformat.Input.Token)"},{"p":"com.google.googlejavaformat.java","c":"Replacement","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter.SnippetKind","l":"EXPRESSION"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"firstBreak(String)","url":"firstBreak(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"flush()"},{"p":"com.google.googlejavaformat","c":"Doc.FillMode","l":"FORCED"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"forcedBreak()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"forcedBreak(Indent)","url":"forcedBreak(com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter","l":"format(SnippetFormatter.SnippetKind, String, List<Range<Integer>>, int, boolean)","url":"format(com.google.googlejavaformat.java.SnippetFormatter.SnippetKind,java.lang.String,java.util.List,int,boolean)"},{"p":"com.google.googlejavaformat.java","c":"Main","l":"format(String...)","url":"format(java.lang.String...)"},{"p":"com.google.googlejavaformat.java.javadoc","c":"JavadocFormatter","l":"formatJavadoc(String, int)","url":"formatJavadoc(java.lang.String,int)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"formatSource(CharSource, CharSink)","url":"formatSource(com.google.common.io.CharSource,com.google.common.io.CharSink)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"formatSource(String, Collection<Range<Integer>>)","url":"formatSource(java.lang.String,java.util.Collection)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"formatSource(String)","url":"formatSource(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"formatSourceAndFixImports(String)","url":"formatSourceAndFixImports(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"Formatter()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"Formatter(JavaFormatterOptions)","url":"%3Cinit%3E(com.google.googlejavaformat.java.JavaFormatterOptions)"},{"p":"com.google.googlejavaformat.java","c":"FormatterException","l":"FormatterException(FormatterDiagnostic)","url":"%3Cinit%3E(com.google.googlejavaformat.FormatterDiagnostic)"},{"p":"com.google.googlejavaformat.java","c":"FormatterException","l":"FormatterException(Iterable<FormatterDiagnostic>)","url":"%3Cinit%3E(java.lang.Iterable)"},{"p":"com.google.googlejavaformat.java","c":"FormatterException","l":"FormatterException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"FormattingError","l":"FormattingError(FormatterDiagnostic)","url":"%3Cinit%3E(com.google.googlejavaformat.FormatterDiagnostic)"},{"p":"com.google.googlejavaformat","c":"FormattingError","l":"FormattingError(Iterable<FormatterDiagnostic>)","url":"%3Cinit%3E(java.lang.Iterable)"},{"p":"com.google.googlejavaformat.java.filer","c":"FormattingFiler","l":"FormattingFiler(Filer, Messager)","url":"%3Cinit%3E(javax.annotation.processing.Filer,javax.annotation.processing.Messager)"},{"p":"com.google.googlejavaformat.java.filer","c":"FormattingFiler","l":"FormattingFiler(Filer)","url":"%3Cinit%3E(javax.annotation.processing.Filer)"},{"p":"com.google.googlejavaformat.java","c":"FormatterException","l":"fromJavacDiagnostics(Iterable<Diagnostic<? extends JavaFileObject>>)","url":"fromJavacDiagnostics(java.lang.Iterable)"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"getColumn()"},{"p":"com.google.googlejavaformat","c":"Input","l":"getColumnNumber(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getColumnNumber(int)"},{"p":"com.google.googlejavaformat","c":"Output","l":"getCommentsHelper()"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"getCommentsHelper()"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"getFormatReplacements(RangeSet<Integer>)","url":"getFormatReplacements(com.google.common.collect.RangeSet)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"getFormatReplacements(String, Collection<Range<Integer>>)","url":"getFormatReplacements(java.lang.String,java.util.Collection)"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"getIndex()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"getInput()"},{"p":"com.google.googlejavaformat","c":"Input","l":"getkN()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getkN()"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"getLine(int)"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"getLineCount()"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"getLineEnding(String)","url":"getLineEnding(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Input","l":"getLineNumber(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getLineNumber(int)"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"getOriginalText()"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"getPosition()"},{"p":"com.google.googlejavaformat","c":"Input","l":"getPositionToColumnMap()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getPositionToColumnMap()"},{"p":"com.google.googlejavaformat","c":"Input","l":"getPositionTokenMap()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getPositionTokenMap()"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"getRanges(int)"},{"p":"com.google.googlejavaformat.java","c":"Replacement","l":"getReplacementString()"},{"p":"com.google.googlejavaformat.java","c":"Replacement","l":"getReplaceRange()"},{"p":"com.google.googlejavaformat.java.filer","c":"FormattingFiler","l":"getResource(JavaFileManager.Location, CharSequence, CharSequence)","url":"getResource(javax.tools.JavaFileManager.Location,java.lang.CharSequence,java.lang.CharSequence)"},{"p":"com.google.googlejavaformat","c":"Input","l":"getText()"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"getText()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getText()"},{"p":"com.google.googlejavaformat","c":"Input.Token","l":"getTok()"},{"p":"com.google.googlejavaformat","c":"Input","l":"getToken(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getToken(int)"},{"p":"com.google.googlejavaformat","c":"Input","l":"getTokens()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"getTokens()"},{"p":"com.google.googlejavaformat","c":"Input.Token","l":"getToksAfter()"},{"p":"com.google.googlejavaformat","c":"Input.Token","l":"getToksBefore()"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions.Style","l":"GOOGLE"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"guessLineSeparator(String)","url":"guessLineSeparator(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"guessToken(String)","url":"guessToken(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"Replacement","l":"hashCode()"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"hasNewlineAt(String, int)","url":"hasNewlineAt(java.lang.String,int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.Direction","l":"HORIZONTAL"},{"p":"com.google.googlejavaformat","c":"Doc.Token.RealOrImaginary","l":"IMAGINARY"},{"p":"com.google.googlejavaformat","c":"Indent","l":"Indent()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"Output","l":"indent(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"indent(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions","l":"indentationMultiplier()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"indentMultiplier"},{"p":"com.google.googlejavaformat","c":"Doc.FillMode","l":"INDEPENDENT"},{"p":"com.google.googlejavaformat","c":"Input","l":"Input()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"InputOutput()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"isComment()"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"isJavadocComment()"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"isNewline()"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"isNewline(String)","url":"isNewline(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"isSlashSlashComment()"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"isSlashStarComment()"},{"p":"com.google.googlejavaformat.java","c":"JavaCommentsHelper","l":"JavaCommentsHelper(String, JavaFormatterOptions)","url":"%3Cinit%3E(java.lang.String,com.google.googlejavaformat.java.JavaFormatterOptions)"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"JavaInput(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"JavaInputAstVisitor(OpsBuilder, int)","url":"%3Cinit%3E(com.google.googlejavaformat.OpsBuilder,int)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"JavaOutput(String, Input, CommentsHelper)","url":"%3Cinit%3E(java.lang.String,com.google.googlejavaformat.Input,com.google.googlejavaformat.CommentsHelper)"},{"p":"com.google.googlejavaformat","c":"Input.Tok","l":"length()"},{"p":"com.google.googlejavaformat","c":"FormatterDiagnostic","l":"line()"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"lineIterator(String)","url":"lineIterator(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"lineOffsetIterator(String)","url":"lineOffsetIterator(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"lineRangesToCharRanges(String, RangeSet<Integer>)","url":"lineRangesToCharRanges(java.lang.String,com.google.common.collect.RangeSet)"},{"p":"com.google.googlejavaformat.java","c":"TypeNameClassifier.JavaCaseFormat","l":"LOWER_CAMEL"},{"p":"com.google.googlejavaformat.java","c":"TypeNameClassifier.JavaCaseFormat","l":"LOWERCASE"},{"p":"com.google.googlejavaformat.java","c":"Main","l":"Main(PrintWriter, PrintWriter, InputStream)","url":"%3Cinit%3E(java.io.PrintWriter,java.io.PrintWriter,java.io.InputStream)"},{"p":"com.google.googlejavaformat.java","c":"Main","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.google.googlejavaformat","c":"CloseOp","l":"make()"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"make(Doc.FillMode, String, Indent, Optional<Output.BreakTag>)","url":"make(com.google.googlejavaformat.Doc.FillMode,java.lang.String,com.google.googlejavaformat.Indent,java.util.Optional)"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"make(Doc.FillMode, String, Indent)","url":"make(com.google.googlejavaformat.Doc.FillMode,java.lang.String,com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"OpenOp","l":"make(Indent)","url":"make(com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"Indent.Const","l":"make(int, int)","url":"make(int,int)"},{"p":"com.google.googlejavaformat","c":"Indent.If","l":"make(Output.BreakTag, Indent, Indent)","url":"make(com.google.googlejavaformat.Output.BreakTag,com.google.googlejavaformat.Indent,com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"makeForced()"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"makeKToIJ(InputOutput)","url":"makeKToIJ(com.google.googlejavaformat.InputOutput)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"markForPartialFormat()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"markForPartialFormat()"},{"p":"com.google.googlejavaformat","c":"Output","l":"markForPartialFormat(Input.Token, Input.Token)","url":"markForPartialFormat(com.google.googlejavaformat.Input.Token,com.google.googlejavaformat.Input.Token)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"markForPartialFormat(Input.Token, Input.Token)","url":"markForPartialFormat(com.google.googlejavaformat.Input.Token,com.google.googlejavaformat.Input.Token)"},{"p":"com.google.googlejavaformat.java","c":"Formatter","l":"MAX_LINE_LENGTH"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"merge(OpsBuilder.BlankLineWanted)","url":"merge(com.google.googlejavaformat.OpsBuilder.BlankLineWanted)"},{"p":"com.google.googlejavaformat","c":"FormatterDiagnostic","l":"message()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"minusFour"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"minusTwo"},{"p":"com.google.googlejavaformat","c":"Newlines","l":"Newlines()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"NO"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.BracesOrNot","l":"NO"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.FirstDeclarationsOrNot","l":"NO"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"op(String)","url":"op(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"open(Indent)","url":"open(com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"OpsBuilder(Input, Output)","url":"%3Cinit%3E(com.google.googlejavaformat.Input,com.google.googlejavaformat.Output)"},{"p":"com.google.googlejavaformat","c":"Output","l":"Output()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"peekToken()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"peekToken(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"plusFour"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"plusTwo"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"PRESERVE"},{"p":"com.google.googlejavaformat.java","c":"Main","l":"processArgs(String...)","url":"processArgs(java.lang.String...)"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"ranges"},{"p":"com.google.googlejavaformat","c":"Doc.Token.RealOrImaginary","l":"REAL"},{"p":"com.google.googlejavaformat","c":"Output.BreakTag","l":"recordBroken(boolean)"},{"p":"com.google.googlejavaformat.java","c":"RemoveUnusedImports","l":"RemoveUnusedImports()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat.java","c":"RemoveUnusedImports","l":"removeUnusedImports(String)","url":"removeUnusedImports(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"ImportOrderer","l":"reorderImports(String, JavaFormatterOptions.Style)","url":"reorderImports(java.lang.String,com.google.googlejavaformat.java.JavaFormatterOptions.Style)"},{"p":"com.google.googlejavaformat.java","c":"ImportOrderer","l":"reorderImports(String)","url":"reorderImports(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"CommentsHelper","l":"rewrite(Input.Tok, int, int)","url":"rewrite(com.google.googlejavaformat.Input.Tok,int,int)"},{"p":"com.google.googlejavaformat.java","c":"JavaCommentsHelper","l":"rewrite(Input.Tok, int, int)","url":"rewrite(com.google.googlejavaformat.Input.Tok,int,int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"scan(Tree, Void)","url":"scan(com.sun.source.tree.Tree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"setCompilationUnit(JCTree.JCCompilationUnit)","url":"setCompilationUnit(com.sun.tools.javac.tree.JCTree.JCCompilationUnit)"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"setLines(ImmutableList<String>)","url":"setLines(com.google.common.collect.ImmutableList)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter","l":"SnippetFormatter()","url":"%3Cinit%3E()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"space()"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"startPosition(Input.Token)","url":"startPosition(com.google.googlejavaformat.Input.Token)"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"startTok(Input.Token)","url":"startTok(com.google.googlejavaformat.Input.Token)"},{"p":"com.google.googlejavaformat","c":"Doc.State","l":"State(int, int)","url":"%3Cinit%3E(int,int)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter.SnippetKind","l":"STATEMENTS"},{"p":"com.google.googlejavaformat.java","c":"StringWrapper","l":"STRING_CONCAT_DELIMITER"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions","l":"style()"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions.Builder","l":"style(JavaFormatterOptions.Style)","url":"style(com.google.googlejavaformat.java.JavaFormatterOptions.Style)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"sync(int)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"sync(Tree)","url":"sync(com.sun.source.tree.Tree)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"token(String, Doc.Token.RealOrImaginary, Indent, Optional<Indent>)","url":"token(java.lang.String,com.google.googlejavaformat.Doc.Token.RealOrImaginary,com.google.googlejavaformat.Indent,java.util.Optional)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"token(String, Indent)","url":"token(java.lang.String,com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"token(String)","url":"token(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"CloseOp","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Doc.State","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Doc.Token","l":"toString()"},{"p":"com.google.googlejavaformat","c":"DocBuilder","l":"toString()"},{"p":"com.google.googlejavaformat","c":"FormatterDiagnostic","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Indent.Const","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Indent.If","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Input","l":"toString()"},{"p":"com.google.googlejavaformat","c":"InputOutput","l":"toString()"},{"p":"com.google.googlejavaformat","c":"OpenOp","l":"toString()"},{"p":"com.google.googlejavaformat","c":"OpsBuilder","l":"toString()"},{"p":"com.google.googlejavaformat","c":"Output","l":"toString()"},{"p":"com.google.googlejavaformat.java","c":"JavaInput","l":"toString()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"toString()"},{"p":"com.google.googlejavaformat.java","c":"JavaOutput","l":"toString()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"typeParametersRest(List<? extends TypeParameterTree>, Indent)","url":"typeParametersRest(java.util.List,com.google.googlejavaformat.Indent)"},{"p":"com.google.googlejavaformat","c":"Doc.FillMode","l":"UNIFIED"},{"p":"com.google.googlejavaformat.java","c":"TypeNameClassifier.JavaCaseFormat","l":"UPPER_CAMEL"},{"p":"com.google.googlejavaformat.java","c":"TypeNameClassifier.JavaCaseFormat","l":"UPPERCASE"},{"p":"com.google.googlejavaformat","c":"CloseOp","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Doc.FillMode","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"Doc.Token.RealOrImaginary","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions.Style","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.BracesOrNot","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.Direction","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.FirstDeclarationsOrNot","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter.SnippetKind","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat.java","c":"TypeNameClassifier.JavaCaseFormat","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.google.googlejavaformat","c":"CloseOp","l":"values()"},{"p":"com.google.googlejavaformat","c":"Doc.FillMode","l":"values()"},{"p":"com.google.googlejavaformat","c":"Doc.Token.RealOrImaginary","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"JavaFormatterOptions.Style","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.BracesOrNot","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.Direction","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.FirstDeclarationsOrNot","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"SnippetFormatter.SnippetKind","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"TypeNameClassifier.JavaCaseFormat","l":"values()"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.Direction","l":"VERTICAL"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visit(Name)","url":"visit(javax.lang.model.element.Name)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitAnnotatedType(AnnotatedTypeTree, Void)","url":"visitAnnotatedType(com.sun.source.tree.AnnotatedTypeTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitAnnotation(AnnotationTree, Void)","url":"visitAnnotation(com.sun.source.tree.AnnotationTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitAnnotationArgument(AssignmentTree)","url":"visitAnnotationArgument(com.sun.source.tree.AssignmentTree)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitAnnotationType(ClassTree)","url":"visitAnnotationType(com.sun.source.tree.ClassTree)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitArrayAccess(ArrayAccessTree, Void)","url":"visitArrayAccess(com.sun.source.tree.ArrayAccessTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitArrayInitializer(List<? extends ExpressionTree>)","url":"visitArrayInitializer(java.util.List)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitArrayType(ArrayTypeTree, Void)","url":"visitArrayType(com.sun.source.tree.ArrayTypeTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitAssert(AssertTree, Void)","url":"visitAssert(com.sun.source.tree.AssertTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitAssignment(AssignmentTree, Void)","url":"visitAssignment(com.sun.source.tree.AssignmentTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitBinary(BinaryTree, Void)","url":"visitBinary(com.sun.source.tree.BinaryTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitBlock(BlockTree, Void)","url":"visitBlock(com.sun.source.tree.BlockTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitBreak(BreakTree, Void)","url":"visitBreak(com.sun.source.tree.BreakTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitCase(CaseTree, Void)","url":"visitCase(com.sun.source.tree.CaseTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitCatch(CatchTree, Void)","url":"visitCatch(com.sun.source.tree.CatchTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitClass(ClassTree, Void)","url":"visitClass(com.sun.source.tree.ClassTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitClassDeclaration(ClassTree)","url":"visitClassDeclaration(com.sun.source.tree.ClassTree)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitCompilationUnit(CompilationUnitTree, Void)","url":"visitCompilationUnit(com.sun.source.tree.CompilationUnitTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitCompoundAssignment(CompoundAssignmentTree, Void)","url":"visitCompoundAssignment(com.sun.source.tree.CompoundAssignmentTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitConditionalExpression(ConditionalExpressionTree, Void)","url":"visitConditionalExpression(com.sun.source.tree.ConditionalExpressionTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitContinue(ContinueTree, Void)","url":"visitContinue(com.sun.source.tree.ContinueTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitDoWhileLoop(DoWhileLoopTree, Void)","url":"visitDoWhileLoop(com.sun.source.tree.DoWhileLoopTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitEmptyStatement(EmptyStatementTree, Void)","url":"visitEmptyStatement(com.sun.source.tree.EmptyStatementTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitEnhancedForLoop(EnhancedForLoopTree, Void)","url":"visitEnhancedForLoop(com.sun.source.tree.EnhancedForLoopTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitEnumDeclaration(ClassTree)","url":"visitEnumDeclaration(com.sun.source.tree.ClassTree)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitExports(ExportsTree, Void)","url":"visitExports(com.sun.source.tree.ExportsTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitExpressionStatement(ExpressionStatementTree, Void)","url":"visitExpressionStatement(com.sun.source.tree.ExpressionStatementTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitForLoop(ForLoopTree, Void)","url":"visitForLoop(com.sun.source.tree.ForLoopTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitFormals(Optional<VariableTree>, List<? extends VariableTree>)","url":"visitFormals(java.util.Optional,java.util.List)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitIdentifier(IdentifierTree, Void)","url":"visitIdentifier(com.sun.source.tree.IdentifierTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitIf(IfTree, Void)","url":"visitIf(com.sun.source.tree.IfTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitImport(ImportTree, Void)","url":"visitImport(com.sun.source.tree.ImportTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitInstanceOf(InstanceOfTree, Void)","url":"visitInstanceOf(com.sun.source.tree.InstanceOfTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitIntersectionType(IntersectionTypeTree, Void)","url":"visitIntersectionType(com.sun.source.tree.IntersectionTypeTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitLabeledStatement(LabeledStatementTree, Void)","url":"visitLabeledStatement(com.sun.source.tree.LabeledStatementTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitLambdaExpression(LambdaExpressionTree, Void)","url":"visitLambdaExpression(com.sun.source.tree.LambdaExpressionTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitLiteral(LiteralTree, Void)","url":"visitLiteral(com.sun.source.tree.LiteralTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitMemberReference(MemberReferenceTree, Void)","url":"visitMemberReference(com.sun.source.tree.MemberReferenceTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitMemberSelect(MemberSelectTree, Void)","url":"visitMemberSelect(com.sun.source.tree.MemberSelectTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitMethod(MethodTree, Void)","url":"visitMethod(com.sun.source.tree.MethodTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitMethodInvocation(MethodInvocationTree, Void)","url":"visitMethodInvocation(com.sun.source.tree.MethodInvocationTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitModifiers(List<? extends AnnotationTree>, JavaInputAstVisitor.Direction, Optional<Output.BreakTag>)","url":"visitModifiers(java.util.List,com.google.googlejavaformat.java.JavaInputAstVisitor.Direction,java.util.Optional)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitModifiers(ModifiersTree, JavaInputAstVisitor.Direction, Optional<Output.BreakTag>)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,com.google.googlejavaformat.java.JavaInputAstVisitor.Direction,java.util.Optional)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitModifiers(ModifiersTree, Void)","url":"visitModifiers(com.sun.source.tree.ModifiersTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitModule(ModuleTree, Void)","url":"visitModule(com.sun.source.tree.ModuleTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitNewArray(NewArrayTree, Void)","url":"visitNewArray(com.sun.source.tree.NewArrayTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitNewClass(NewClassTree, Void)","url":"visitNewClass(com.sun.source.tree.NewClassTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitOpens(OpensTree, Void)","url":"visitOpens(com.sun.source.tree.OpensTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitParameterizedType(ParameterizedTypeTree, Void)","url":"visitParameterizedType(com.sun.source.tree.ParameterizedTypeTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitParenthesized(ParenthesizedTree, Void)","url":"visitParenthesized(com.sun.source.tree.ParenthesizedTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitPrimitiveType(PrimitiveTypeTree, Void)","url":"visitPrimitiveType(com.sun.source.tree.PrimitiveTypeTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitProvides(ProvidesTree, Void)","url":"visitProvides(com.sun.source.tree.ProvidesTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitRequires(RequiresTree, Void)","url":"visitRequires(com.sun.source.tree.RequiresTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitReturn(ReturnTree, Void)","url":"visitReturn(com.sun.source.tree.ReturnTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitStatements(List<? extends StatementTree>)","url":"visitStatements(java.util.List)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitSwitch(ExpressionTree, List<? extends CaseTree>)","url":"visitSwitch(com.sun.source.tree.ExpressionTree,java.util.List)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitSwitch(SwitchTree, Void)","url":"visitSwitch(com.sun.source.tree.SwitchTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitSynchronized(SynchronizedTree, Void)","url":"visitSynchronized(com.sun.source.tree.SynchronizedTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitThrow(ThrowTree, Void)","url":"visitThrow(com.sun.source.tree.ThrowTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitTry(TryTree, Void)","url":"visitTry(com.sun.source.tree.TryTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitTypeCast(TypeCastTree, Void)","url":"visitTypeCast(com.sun.source.tree.TypeCastTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitTypeParameter(TypeParameterTree, Void)","url":"visitTypeParameter(com.sun.source.tree.TypeParameterTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitUnary(UnaryTree, Void)","url":"visitUnary(com.sun.source.tree.UnaryTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitUnionType(UnionTypeTree, Void)","url":"visitUnionType(com.sun.source.tree.UnionTypeTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitUses(UsesTree, Void)","url":"visitUses(com.sun.source.tree.UsesTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitVariable(VariableTree, Void)","url":"visitVariable(com.sun.source.tree.VariableTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitWhileLoop(WhileLoopTree, Void)","url":"visitWhileLoop(com.sun.source.tree.WhileLoopTree,java.lang.Void)"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"visitWildcard(WildcardTree, Void)","url":"visitWildcard(com.sun.source.tree.WildcardTree,java.lang.Void)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"wanted()"},{"p":"com.google.googlejavaformat","c":"Output.BreakTag","l":"wasBreakTaken()"},{"p":"com.google.googlejavaformat","c":"DocBuilder","l":"withOps(List<Op>)","url":"withOps(java.util.List)"},{"p":"com.google.googlejavaformat.java","c":"StringWrapper","l":"wrap(String, Formatter)","url":"wrap(java.lang.String,com.google.googlejavaformat.java.Formatter)"},{"p":"com.google.googlejavaformat","c":"Doc","l":"write(Output)","url":"write(com.google.googlejavaformat.Output)"},{"p":"com.google.googlejavaformat","c":"Doc.Break","l":"write(Output)","url":"write(com.google.googlejavaformat.Output)"},{"p":"com.google.googlejavaformat","c":"Doc.Token","l":"write(Output)","url":"write(com.google.googlejavaformat.Output)"},{"p":"com.google.googlejavaformat","c":"OpsBuilder.BlankLineWanted","l":"YES"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.BracesOrNot","l":"YES"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor.FirstDeclarationsOrNot","l":"YES"},{"p":"com.google.googlejavaformat","c":"Indent.Const","l":"ZERO"},{"p":"com.google.googlejavaformat.java","c":"JavaInputAstVisitor","l":"ZERO"}]