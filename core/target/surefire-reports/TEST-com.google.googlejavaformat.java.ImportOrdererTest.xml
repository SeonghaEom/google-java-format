<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.google.googlejavaformat.java.ImportOrdererTest" time="0.066" tests="36" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="java.vm.version" value="11.0.7+8-LTS"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home/lib"/>
    <property name="gopherProxySet" value="false"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/na/Documents/google-java-format"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="https://openjdk.java.net/"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="user.country" value="KR"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/na/Documents/google-java-format"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="java.runtime.version" value="11.0.7+8-LTS"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/jr/9y464h7s5qbgbtzp4x9khc2m0000gp/T/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/local/Cellar/maven/3.6.3_1/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/na/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/usr/local/Cellar/maven/3.6.3_1/libexec/conf"/>
    <property name="jdk.debug" value="release"/>
    <property name="java.class.version" value="55.0"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.15.4"/>
    <property name="library.jansi.path" value="/usr/local/Cellar/maven/3.6.3_1/libexec/lib/jansi-native"/>
    <property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16|localhost|*.localhost|lx.astxsvc.com|*.lx.astxsvc.com|127.0.0.1:21300|*.127.0.0.1:21300"/>
    <property name="user.home" value="/Users/na"/>
    <property name="user.timezone" value="Asia/Seoul"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="11"/>
    <property name="user.name" value="na"/>
    <property name="java.class.path" value="/usr/local/Cellar/maven/3.6.3_1/libexec/boot/plexus-classworlds-2.6.0.jar"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher install"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk-11.0.7.jdk/Contents/Home"/>
    <property name="user.language" value="ko"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="11.0.7"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/Cellar/maven/3.6.3_1/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.version.date" value="2020-04-14"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="java.vendor.version" value="18.9"/>
    <property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16|localhost|*.localhost|lx.astxsvc.com|*.lx.astxsvc.com|127.0.0.1:21300|*.127.0.0.1:21300"/>
    <property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16|localhost|*.localhost|lx.astxsvc.com|*.lx.astxsvc.com|127.0.0.1:21300|*.127.0.0.1:21300"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="reorder[0: package foo;&#10;&#10;import android.abC.Bar;&#10;import android.abc.Bar;&#10;public class Blim {}&#10;]" classname="reorder[0: package foo;&#10;&#10;import android.abC.Bar;&#10;import android.abc.Bar;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$AospStyle)" time="0.011"/>
  <testcase name="reorder[1: package foo;&#10;&#10;import com.android.Bar;&#10;import com.google.Bar;&#10;public class Blim {}&#10;]" classname="reorder[1: package foo;&#10;&#10;import com.android.Bar;&#10;import com.google.Bar;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$AospStyle)" time="0"/>
  <testcase name="reorder[2: package foo;&#10;&#10;import static net.Bar.baz;&#10;import static org.junit.Bar.baz;&#10;import static com.google.Bar.baz;&#10;import static java.lang.Bar.baz;&#10;import static junit.Bar.baz;&#10;import static javax.annotation.Bar.baz;&#10;import static android.Bar.baz;&#10;import net.Bar;&#10;import org.junit.Bar;&#10;import com.google.Bar;&#10;import java.lang.Bar;&#10;import junit.Bar;&#10;import javax.annotation.Bar;&#10;import android.Bar;&#10;public class Blim {}&#10;]" classname="reorder[2: package foo;&#10;&#10;import static net.Bar.baz;&#10;import static org.junit.Bar.baz;&#10;import static com.google.Bar.baz;&#10;import static java.lang.Bar.baz;&#10;import static junit.Bar.baz;&#10;import static javax.annotation.Bar.baz;&#10;import static android.Bar.baz;&#10;import net.Bar;&#10;import org.junit.Bar;&#10;import com.google.Bar;&#10;import java.lang.Bar;&#10;import junit.Bar;&#10;import javax.annotation.Bar;&#10;import android.Bar;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$AospStyle)" time="0.007"/>
  <testcase name="reorder[3: package foo;&#10;&#10;import static java.first.Bar.baz;&#10;import static com.second.Bar.baz;&#10;import com.first.Bar;&#10;import static android.second.Bar.baz;&#10;import dalvik.first.Bar;&#10;import static dalvik.first.Bar.baz;&#10;import static androidx.second.Bar.baz;&#10;import java.second.Bar;&#10;import static com.android.second.Bar.baz;&#10;import static net.first.Bar.baz;&#10;import gov.second.Bar;&#10;import junit.second.Bar;&#10;import static libcore.second.Bar.baz;&#10;import static java.second.Bar.baz;&#10;import static net.second.Bar.baz;&#10;import static org.first.Bar.baz;&#10;import static dalvik.second.Bar.baz;&#10;import javax.first.Bar;&#10;import static javax.second.Bar.baz;&#10;import android.first.Bar;&#10;import android.second.Bar;&#10;import static javax.first.Bar.baz;&#10;import androidx.first.Bar;&#10;import static androidx.first.Bar.baz;&#10;import androidx.second.Bar;&#10;import com.android.first.Bar;&#10;import gov.first.Bar;&#10;import com.android.second.Bar;&#10;import dalvik.second.Bar;&#10;import static org.second.Bar.baz;&#10;import net.first.Bar;&#10;import libcore.second.Bar;&#10;import static android.first.Bar.baz;&#10;import com.second.Bar;&#10;import static gov.second.Bar.baz;&#10;import static gov.first.Bar.baz;&#10;import static junit.first.Bar.baz;&#10;import libcore.first.Bar;&#10;import junit.first.Bar;&#10;import javax.second.Bar;&#10;import static libcore.first.Bar.baz;&#10;import net.second.Bar;&#10;import static com.first.Bar.baz;&#10;import org.second.Bar;&#10;import static junit.second.Bar.baz;&#10;import java.first.Bar;&#10;import org.first.Bar;&#10;import static com.android.first.Bar.baz;&#10;public class Blim {}&#10;]" classname="reorder[3: package foo;&#10;&#10;import static java.first.Bar.baz;&#10;import static com.second.Bar.baz;&#10;import com.first.Bar;&#10;import static android.second.Bar.baz;&#10;import dalvik.first.Bar;&#10;import static dalvik.first.Bar.baz;&#10;import static androidx.second.Bar.baz;&#10;import java.second.Bar;&#10;import static com.android.second.Bar.baz;&#10;import static net.first.Bar.baz;&#10;import gov.second.Bar;&#10;import junit.second.Bar;&#10;import static libcore.second.Bar.baz;&#10;import static java.second.Bar.baz;&#10;import static net.second.Bar.baz;&#10;import static org.first.Bar.baz;&#10;import static dalvik.second.Bar.baz;&#10;import javax.first.Bar;&#10;import static javax.second.Bar.baz;&#10;import android.first.Bar;&#10;import android.second.Bar;&#10;import static javax.first.Bar.baz;&#10;import androidx.first.Bar;&#10;import static androidx.first.Bar.baz;&#10;import androidx.second.Bar;&#10;import com.android.first.Bar;&#10;import gov.first.Bar;&#10;import com.android.second.Bar;&#10;import dalvik.second.Bar;&#10;import static org.second.Bar.baz;&#10;import net.first.Bar;&#10;import libcore.second.Bar;&#10;import static android.first.Bar.baz;&#10;import com.second.Bar;&#10;import static gov.second.Bar.baz;&#10;import static gov.first.Bar.baz;&#10;import static junit.first.Bar.baz;&#10;import libcore.first.Bar;&#10;import junit.first.Bar;&#10;import javax.second.Bar;&#10;import static libcore.first.Bar.baz;&#10;import net.second.Bar;&#10;import static com.first.Bar.baz;&#10;import org.second.Bar;&#10;import static junit.second.Bar.baz;&#10;import java.first.Bar;&#10;import org.first.Bar;&#10;import static com.android.first.Bar.baz;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$AospStyle)" time="0.012"/>
  <testcase name="reorder[0: &#10;]" classname="reorder[0: &#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[1: foo&#10;bar&#10;]" classname="reorder[1: foo&#10;bar&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.002"/>
  <testcase name="reorder[2: package foo;&#10;&#10;import com.google.first.Bar;&#10;&#10;public class Blim {}&#10;]" classname="reorder[2: package foo;&#10;&#10;import com.google.first.Bar;&#10;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[3: package foo;&#10;&#10;import com.google.first.Bar;&#10;import com.google.second.Foo;&#10;&#10;public class Blim {}&#10;]" classname="reorder[3: package foo;&#10;&#10;import com.google.first.Bar;&#10;import com.google.second.Foo;&#10;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.002"/>
  <testcase name="reorder[4: package foo;&#10;&#10;import com.google.second.Foo;&#10;import com.google.first.Bar;&#10;&#10;public class Blim {}&#10;]" classname="reorder[4: package foo;&#10;&#10;import com.google.second.Foo;&#10;import com.google.first.Bar;&#10;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[5: import java.util.Collection;&#10;// BUG: diagnostic contains&#10;import java.util.List;&#10;&#10;class B74235047 {}&#10;]" classname="reorder[5: import java.util.Collection;&#10;// BUG: diagnostic contains&#10;import java.util.List;&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[6: import java.util.Set;&#10;import java.util.Collection;&#10;// BUG: diagnostic contains&#10;import java.util.List;&#10;&#10;class B74235047 {}&#10;]" classname="reorder[6: import java.util.Set;&#10;import java.util.Collection;&#10;// BUG: diagnostic contains&#10;import java.util.List;&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[7: import java.util.List;&#10;// BUG: diagnostic contains&#10;import java.util.Set;&#10;import java.util.Collection;&#10;&#10;class B74235047 {}&#10;]" classname="reorder[7: import java.util.List;&#10;// BUG: diagnostic contains&#10;import java.util.Set;&#10;import java.util.Collection;&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.002"/>
  <testcase name="reorder[8: // BEGIN-STRIP&#10;import com.google.testing.testsize.MediumTest;&#10;import com.google.testing.testsize.MediumTestAttribute;&#10;// END-STRIP&#10;&#10;class B74235047 {}&#10;]" classname="reorder[8: // BEGIN-STRIP&#10;import com.google.testing.testsize.MediumTest;&#10;import com.google.testing.testsize.MediumTestAttribute;&#10;// END-STRIP&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[9: import com.google.testing.testsize.MediumTest;          // Keep this import&#10;import com.google.testing.testsize.MediumTestAttribute; // Keep this import&#10;&#10;class B74235047 {}&#10;]" classname="reorder[9: import com.google.testing.testsize.MediumTest;          // Keep this import&#10;import com.google.testing.testsize.MediumTestAttribute; // Keep this import&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[10: import java.util.Set;&#10;import java.util.List;&#10;&#10;// This comment doesn&apos;t get moved because of the blank line.&#10;&#10;class B74235047 {}&#10;]" classname="reorder[10: import java.util.Set;&#10;import java.util.List;&#10;&#10;// This comment doesn&apos;t get moved because of the blank line.&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[11: import b.B;&#10;// MOE: end_strip&#10;import c.C;&#10;// MOE: begin_strip&#10;import a.A;&#10;&#10;class B74235047 {}&#10;]" classname="reorder[11: import b.B;&#10;// MOE: end_strip&#10;import c.C;&#10;// MOE: begin_strip&#10;import a.A;&#10;&#10;class B74235047 {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[12: package foo;&#10;&#10;import com.google.second.Foo;;&#10;import com.google.first.Bar;;&#10;&#10;public class Blim {}&#10;]" classname="reorder[12: package foo;&#10;&#10;import com.google.second.Foo;;&#10;import com.google.first.Bar;;&#10;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[13: package foo;&#10;&#10;import com.google.second.Foo;&#10;import com.google.first.Bar;&#10;import com.google.second.Foo;&#10;import com.google.first.Bar;&#10;&#10;public class Blim {}&#10;]" classname="reorder[13: package foo;&#10;&#10;import com.google.second.Foo;&#10;import com.google.first.Bar;&#10;import com.google.second.Foo;&#10;import com.google.first.Bar;&#10;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[14: package foo;&#10;&#10;import com.google.second.*;&#10;import com.google.first.Bar;&#10;import com.google.first.*;&#10;&#10;public class Blim {}&#10;]" classname="reorder[14: package foo;&#10;&#10;import com.google.second.*;&#10;import com.google.first.Bar;&#10;import com.google.first.*;&#10;&#10;public class Blim {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[15: package com.google.example;&#10;&#10;import com.google.common.base.Preconditions;&#10;&#10;import org.junit.runner.RunWith;&#10;import org.junit.runners.JUnit4;&#10;&#10;import java.util.List;&#10;&#10;import javax.annotations.Nullable;&#10;&#10;import static org.junit.Assert.fail;&#10;import static com.google.truth.Truth.assertThat;&#10;&#10;@RunWith(JUnit4.class)&#10;public class SomeTest {}&#10;]" classname="reorder[15: package com.google.example;&#10;&#10;import com.google.common.base.Preconditions;&#10;&#10;import org.junit.runner.RunWith;&#10;import org.junit.runners.JUnit4;&#10;&#10;import java.util.List;&#10;&#10;import javax.annotations.Nullable;&#10;&#10;import static org.junit.Assert.fail;&#10;import static com.google.truth.Truth.assertThat;&#10;&#10;@RunWith(JUnit4.class)&#10;public class SomeTest {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[16:   import  com.foo.Second;&#10;  import com.foo.First;&#10;  public class Foo {}&#10;]" classname="reorder[16:   import  com.foo.Second;&#10;  import com.foo.First;&#10;  public class Foo {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[17: package com.google.example;&#10;&#10;import]" classname="reorder[17: package com.google.example;&#10;&#10;import](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.004"/>
  <testcase name="reorder[18: package com.google.example;&#10;&#10;import&#10;]" classname="reorder[18: package com.google.example;&#10;&#10;import&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[19: package com.google.example;&#10;&#10;import foo]" classname="reorder[19: package com.google.example;&#10;&#10;import foo](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[20: package com.google.example;&#10;&#10;import foo.]" classname="reorder[20: package com.google.example;&#10;&#10;import foo.](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.002"/>
  <testcase name="reorder[21: import com.foo.Second;&#10;import com.foo.First;&#10;/* we don&apos;t support block comments&#10;   between imports either */&#10;import com.foo.Third;&#10;]" classname="reorder[21: import com.foo.Second;&#10;import com.foo.First;&#10;/* we don&apos;t support block comments&#10;   between imports either */&#10;import com.foo.Third;&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[22: import com.foo.Second; /* no block comments after imports */&#10;import com.foo.First;&#10;]" classname="reorder[22: import com.foo.Second; /* no block comments after imports */&#10;import com.foo.First;&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[23: import com.foo.Second;&#10;import com.foo.First;&#10;/* but we&apos;re not fooled by comments that look like imports:&#10;import com.foo.Third;&#10;*/&#10;]" classname="reorder[23: import com.foo.Second;&#10;import com.foo.First;&#10;/* but we&apos;re not fooled by comments that look like imports:&#10;import com.foo.Third;&#10;*/&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[24: import com . foo . Second ;&#10;import com.foo.First;&#10;]" classname="reorder[24: import com . foo . Second ;&#10;import com.foo.First;&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[25: import com.abc.@;&#10;import com.abc.@@;&#10;]" classname="reorder[25: import com.abc.@;&#10;import com.abc.@@;&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[26: import com.abc.3;&#10;import com.abc.2;&#10;]" classname="reorder[26: import com.abc.3;&#10;import com.abc.2;&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[27: import com.foo.Second&#10;import com.foo.First;&#10;]" classname="reorder[27: import com.foo.Second&#10;import com.foo.First;&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[28: import com.foo.Second; import com.foo.First;&#10;class Test {}&#10;]" classname="reorder[28: import com.foo.Second; import com.foo.First;&#10;class Test {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0"/>
  <testcase name="reorder[29: import com.foo.Second; import com.foo.First; class Test {}&#10;]" classname="reorder[29: import com.foo.Second; import com.foo.First; class Test {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0"/>
  <testcase name="reorder[30: package p;&#10;&#10;/** test */&#10;&#10;import a.A;&#10;&#10;/** test */&#10;&#10;class Test {}&#10;]" classname="reorder[30: package p;&#10;&#10;/** test */&#10;&#10;import a.A;&#10;&#10;/** test */&#10;&#10;class Test {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0.001"/>
  <testcase name="reorder[31: package p; import a.A; class Test {}&#10;]" classname="reorder[31: package p; import a.A; class Test {}&#10;](com.google.googlejavaformat.java.ImportOrdererTest$GoogleStyle)" time="0"/>
</testsuite>